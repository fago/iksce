<?php
/**
 * @file
 * Provides the backbone libary (Backbone.js) for Drupal.
 *
 */

/**
 * Implements hook_init().
 *
 * Add backbone.js and dependency underscore.js to all pages, along with
 * related settings.
 *
 */
function backbone_library_init() {
  $page_match = FALSE;

  $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
  $backbone_pages = variable_get('backbone_pages', '');

  // Compare the lowercase internal and lowercase path alias (if any).
  $page_match = drupal_match_path($path, $backbone_pages);
  if ($path != $_GET['q']) {
    $page_match = $page_match || drupal_match_path($_GET['q'], $backbone_pages);
  }

  // If we are on a backbone.js page load the libraries.
  if ($page_match) {
    module_invoke_all('backbone_init', $path);
  }
}


/**
 * Implements hook_backbone_init().
 *
 * @param String $path
 *   Processed path of current alias.
 */
function backbone_library_backbone_init($path) {
  drupal_add_library('backbone_library', 'backbone');
}

/**
 * Implements hook_menu().
 */
function backbone_library_menu() {
  $items = array();

  $items['admin/config/development/backbone'] = array(
    'title' => 'Backbone',
    'description' => 'Configure which pages to include backbone.js library on.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('backbone_library_settings_form'),
    'access arguments' => array('administer backbone'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'backbone_library.admin.inc',
  );

  $items['admin/config/development/backbone/pages'] = array(
    'title' => 'Pages',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function backbone_permission() {
  return array(
    'administer backbone' => array(
      'title' => t('Administer backbone'),
      'description' => t('Configure settings for the Backbone.js integration module.module'),
    ),
  );
}

/**
 * Implements hook_library().
 */
function backbone_library_library() {
  $libraries['twig.js'] = array(
    'title' => 'Twig.js',
    'website' => 'https://github.com/justjohn/twig.js',
    'version' => '0.4.3',
    'js' => array(
      libraries_get_path('twig.js') . '/twig.min.js' => array(),
    ),
  );
  $libraries['underscore'] = array(
    'title' => 'Underscore.js',
    'website' => 'http://documentcloud.github.com/underscore/',
    'version' => '1.3.1',
    'js' => array(
      libraries_get_path('underscore') . '/underscore-min.js' => array(),
    ),
  );
  $libraries['backbone'] = array(
    'title' => 'Backbone.js',
    'website' => 'http://documentcloud.github.com/backbone/',
    'version' => '0.9.1',
    'js' => array(
      libraries_get_path('backbone') . '/backbone-min.js' => array(),
    ),
    'dependencies' => array(
      array('backbone_library' , 'underscore'),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_library_alter().
 */
function backbone_library_library_alter(&$libraries, $module) {
  // Determine whether to use minified or development versions of files.
  if ($module == 'backbone_library' && _backbone_variable_get('compression_type', 'min') == 'none') {
    $libraries['twig.js']['js'] = array(libraries_get_path('twig.js') . '/twig.js' => array());
    $libraries['underscore']['js'] = array(libraries_get_path('underscore') . '/underscore.js' => array());
    $libraries['backbone']['js'] = array(libraries_get_path('backbone') . '/backbone.js' => array());
  }
}
